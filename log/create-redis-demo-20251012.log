owanghto@cloudshell:~/redis (vp-daytrader-dev-data)$ ./deploy.sh owanghto@gmail.com demo
设置 GCP 项目: vp-daytrader-dev-data
Updated property [core/project].
检查或创建 GCS 存储桶: gs://daytrader-dbaas-bucket
存储桶已存在: gs://daytrader-dbaas-bucket
检查或创建 VPC 预留 IP
VPC 预留 IP 已存在
配置 VPC 对等连接
Operation "operations/pssn.p24-1080946127955-ffebed21-04ac-4dff-9a7c-19528bf477f7" finished successfully.
初始化 Terraform

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/google from the dependency lock file
- Using previously-installed hashicorp/google v7.6.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
执行 Terraform Plan: demo.tfvars
Acquiring state lock. This may take a few moments...

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # google_redis_instance.redis will be created
  + resource "google_redis_instance" "redis" {
      + alternative_location_id     = (known after apply)
      + auth_enabled                = true
      + auth_string                 = (sensitive value)
      + authorized_network          = "daytrader-dev-data"
      + connect_mode                = "PRIVATE_SERVICE_ACCESS"
      + create_time                 = (known after apply)
      + current_location_id         = (known after apply)
      + effective_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + effective_reserved_ip_range = (known after apply)
      + host                        = (known after apply)
      + id                          = (known after apply)
      + location_id                 = (known after apply)
      + maintenance_schedule        = (known after apply)
      + maintenance_version         = (known after apply)
      + memory_size_gb              = 5
      + name                        = "daytrader-redis-demo"
      + nodes                       = (known after apply)
      + persistence_iam_identity    = (known after apply)
      + port                        = (known after apply)
      + project                     = "vp-daytrader-dev-data"
      + read_endpoint               = (known after apply)
      + read_endpoint_port          = (known after apply)
      + read_replicas_mode          = (known after apply)
      + redis_configs               = {
          + "maxmemory-policy" = "allkeys-lru"
        }
      + redis_version               = "REDIS_7_2"
      + region                      = "asia-northeast3"
      + replica_count               = 0
      + reserved_ip_range           = (known after apply)
      + secondary_ip_range          = (known after apply)
      + server_ca_certs             = (known after apply)
      + terraform_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + tier                        = "BASIC"
      + transit_encryption_mode     = "SERVER_AUTHENTICATION"

      + maintenance_policy {
          + create_time = (known after apply)
          + update_time = (known after apply)

          + weekly_maintenance_window {
              + day      = "SUNDAY"
              + duration = (known after apply)

              + start_time {
                  + hours   = 19
                  + minutes = 0
                }
            }
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + redis_host         = (known after apply)
  + redis_instance_id  = (known after apply)
  + redis_port         = (known after apply)

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
google_redis_instance.redis: Still creating... [1m0s elapsed]
google_redis_instance.redis: Still creating... [1m10s elapsed]
google_redis_instance.redis: Still creating... [1m20s elapsed]
google_redis_instance.redis: Still creating... [1m30s elapsed]
google_redis_instance.redis: Still creating... [1m40s elapsed]
google_redis_instance.redis: Still creating... [1m50s elapsed]
google_redis_instance.redis: Still creating... [2m0s elapsed]
google_redis_instance.redis: Still creating... [2m10s elapsed]
google_redis_instance.redis: Still creating... [2m20s elapsed]
google_redis_instance.redis: Still creating... [2m30s elapsed]
google_redis_instance.redis: Still creating... [2m40s elapsed]
google_redis_instance.redis: Still creating... [2m50s elapsed]
google_redis_instance.redis: Still creating... [3m0s elapsed]
google_redis_instance.redis: Still creating... [3m10s elapsed]
google_redis_instance.redis: Still creating... [3m20s elapsed]
google_redis_instance.redis: Still creating... [3m30s elapsed]
google_redis_instance.redis: Still creating... [3m40s elapsed]
google_redis_instance.redis: Still creating... [3m50s elapsed]
google_redis_instance.redis: Still creating... [4m0s elapsed]
google_redis_instance.redis: Still creating... [4m10s elapsed]
google_redis_instance.redis: Still creating... [4m20s elapsed]
google_redis_instance.redis: Still creating... [4m30s elapsed]
google_redis_instance.redis: Still creating... [4m40s elapsed]
google_redis_instance.redis: Still creating... [4m50s elapsed]
google_redis_instance.redis: Still creating... [5m0s elapsed]
google_redis_instance.redis: Still creating... [5m10s elapsed]
google_redis_instance.redis: Still creating... [5m20s elapsed]
google_redis_instance.redis: Still creating... [5m30s elapsed]
google_redis_instance.redis: Still creating... [5m40s elapsed]
google_redis_instance.redis: Still creating... [5m50s elapsed]
google_redis_instance.redis: Creation complete after 5m53s [id=projects/vp-daytrader-dev-data/locations/asia-northeast3/instances/daytrader-redis-demo]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

Outputs:

redis_auth_enabled = true
redis_host = "10.156.44.3"
redis_instance_id = "projects/vp-daytrader-dev-data/locations/asia-northeast3/instances/daytrader-redis-demo"
redis_port = 6378
Redis 部署完成
owanghto@cloudshell:~/redis (vp-daytrader-dev-data)$ 